<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown基础语法</title>
      <link href="/2020/02/11/markdown-write/"/>
      <url>/2020/02/11/markdown-write/</url>
      
        <content type="html"><![CDATA[        <h1 id="Markdown基础语法">          <span class="heading-link">Markdown基础语法</span>        </h1>              <h2 id="强调">          <span class="heading-link">强调</span>        </h2>      <p>星号与下划线都可以，单是斜体，双是粗体，符号可跨行，符号可加空格</p><div class="table-container"><table><thead><tr><th>代码</th><th>效果</th></tr></thead><tbody><tr><td><code>*这是斜体*</code></td><td><em>这是斜体</em></td></tr><tr><td><code>_这是斜体_</code></td><td><em>这是斜体</em></td></tr><tr><td><code>**这是粗体**</code></td><td><strong>这是粗体</strong></td></tr><tr><td><code>__这是粗体__</code></td><td><strong>这是粗体</strong></td></tr></tbody></table></div><hr>        <h2 id="标题">          <span class="heading-link">标题</span>        </h2>      <p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></div></figure><p> 效果如下： </p><blockquote>        <h1 id="一级标题">          <span class="heading-link">一级标题</span>        </h1>              <h2 id="二级标题">          <span class="heading-link">二级标题</span>        </h2>              <h3 id="三级标题">          <span class="heading-link">三级标题</span>        </h3>              <h4 id="四级标题">          <span class="heading-link">四级标题</span>        </h4>              <h5 id="五级标题">          <span class="heading-link">五级标题</span>        </h5>              <h6 id="六级标题">          <span class="heading-link">六级标题</span>        </h6>      </blockquote><p>注意</p><ol><li>最后一个 <code>#</code> 字符与标题<strong>中间要留有一个空格</strong> </li><li>标题共提供 <strong>6</strong> 级</li><li>一般行文中，标题应置于行首。若置于表格中，可能无法正确解析</li></ol><hr>        <h2 id="引用">          <span class="heading-link">引用</span>        </h2>      <p>Markdown 中引用通过符号 ‘&gt;’ 来实现。’&gt;’ 符号后的空格，可有可无。<br> 在引用的区块内，允许换行存在，换行并不会终止引用的区块。如果要结束引用，需要一行空白行，来结束引用的区块。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 这是一句引用</span><br><span class="line">&gt; 这句仍然在引用区块内</span><br><span class="line">&gt;&gt; 这是一句嵌套引用</span><br><span class="line">&gt;&gt; 这句仍然在嵌套引用区块内</span><br><span class="line">&gt;</span><br><span class="line">&gt; 另起一行的引用。前面需要一个视觉上的空行表示内层嵌套的结束，空行前面的(&#39;&gt;&#39;)可以有可以没有。</span><br></pre></td></tr></table></div></figure><p> 效果如下：</p><blockquote><p>这是一句引用<br> 这句仍然在引用区块内</p><blockquote><p>这是一句嵌套引用<br> 这句仍然在嵌套引用区块内</p></blockquote><p>另起一行的引用。前面需要一个视觉上的空行表示内层嵌套的结束，空行前面的<strong>(‘&gt;’)</strong>可以有可以没有。</p></blockquote><hr>        <h2 id="列表">          <span class="heading-link">列表</span>        </h2>              <h3 id="有序列表">          <span class="heading-link">有序列表</span>        </h3>      <p>数字不能省略但可无序，点号之后的空格不能少。<br> 虽然下面代码的序号是 1，2，4，但是在显示时，仍然为自然数序列，并不是完成与编号一致。<br> 同样的，在列表的最后需要留有一行空行，以表达列表的结束，不然将作为一个无编号的列表存在。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 列表 A</span><br><span class="line">2. 列表 B</span><br><span class="line">4. 列表 C</span><br></pre></td></tr></table></div></figure><p> 效果如下：</p><ol><li>列表 A</li><li>列表 B</li><li>列表 C</li></ol>        <h3 id="无序列表">          <span class="heading-link">无序列表</span>        </h3>      <p>符号之后的空格不能少，<code>-+*</code>效果一样，但不能混合使用</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- 列表 A1</span><br><span class="line">- 列表 B1</span><br><span class="line"></span><br><span class="line">+ 列表 A2</span><br><span class="line">+ 列表 B2</span><br><span class="line"></span><br><span class="line">* 列表 A3</span><br><span class="line">* 列表 B3</span><br></pre></td></tr></table></div></figure><p> 效果如下：</p><ul><li><p>列表 A1</p></li><li><p>列表 B1</p></li><li><p>列表 A2</p></li><li><p>列表 B2</p></li><li><p>列表 A3</p></li><li><p>列表 B3</p></li></ul>        <h3 id="嵌套列表">          <span class="heading-link">嵌套列表</span>        </h3>      <p>有序与无序，以及有序和无序列表本身都是可以自由的嵌套的。<br> Markdown 中的列表嵌套，通过<strong>在符号前增加空格</strong>来表示。同一级别下，前面的空格数目应该保持一致。每递进一级，我习惯上使用 2 个空格缩进来表示。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 一级列表 A</span><br><span class="line">- 一级列表 B</span><br><span class="line">  - 二级列表 A</span><br><span class="line">  * 二级列表 B</span><br><span class="line">    + 三级列表 A</span><br><span class="line">- 一级列表 C</span><br></pre></td></tr></table></div></figure><p>效果如下： </p><p><img src="/2020/02/11/markdown-write/C:%5CHexo%5Csource_posts%5Cmarkdown-write%5Ca.png" alt="a"></p><blockquote><p>注意，有序列表的嵌套，也是通过预留空格实现</p></blockquote><ol><li>有序一级列表 A</li><li>有序一级列表 B</li><li>有序二级列表 A</li><li>有序二级列表 B</li></ol>        <h2 id="分割线">          <span class="heading-link">分割线</span>        </h2>      <p>三个或更多<code>-_*</code>，必须单独一行，可含空格。<br> 例如以下形式，都可以表示为分割线。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- -    -</span><br><span class="line">___</span><br><span class="line">_   __</span><br><span class="line">***</span><br><span class="line">*  **</span><br><span class="line">  *  *  *</span><br></pre></td></tr></table></div></figure>        <h1 id="进阶语法">          <span class="heading-link">进阶语法</span>        </h1>              <h2 id="超链接">          <span class="heading-link">超链接</span>        </h2>      <p>图片与链接，在 Markdown 语法中表达类似，都是 <code>[链接文字](链接地址)</code> 这样的形式。</p>        <h3 id="普通链接">          <span class="heading-link">普通链接</span>        </h3>      <p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Wikipedia Markdown 条目](https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;wiki&#x2F;Markdown)</span><br><span class="line">[Wikipedia Markdown 条目](https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;wiki&#x2F;Markdown &quot;Markdown 条目&quot;)</span><br></pre></td></tr></table></div></figure>        <h3 id="图片链接">          <span class="heading-link">图片链接</span>        </h3>      <p>图片需要在 <code>[]</code> 前增加一个 <code>!</code> 以使得图片在网页上直接显示，而不仅仅是个链接形式。</p><p>代码:</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![维基百科 Logo](https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;static&#x2F;images&#x2F;project-logos&#x2F;zhwiki.png)</span><br><span class="line">![维基百科 Logo](https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;static&#x2F;images&#x2F;project-logos&#x2F;zhwiki.png &quot;维基 Logo&quot;)</span><br></pre></td></tr></table></div></figure><p>效果如下： </p><p>（暂时没有效果图啊！将就了）</p><p>上面分别有两个超链接和两张图片，两个超链接的区别在于一个增加了说明注释，而另一个没有，图片同理。 </p>        <h3 id="索引链接">          <span class="heading-link">索引链接</span>        </h3>      <p>索引链接，本质上与前两种链接一致，只是索引链接将 <code>[链接文字](链接地址)</code> 分离为<code>[链接文字][索引]</code>, <code>[索引]:链接地址</code> 的形式。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[Wikipedia Markdown 条目][1]</span><br><span class="line">[1]:https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;wiki&#x2F;Markdown</span><br></pre></td></tr></table></div></figure><p>效果如下：<br> <span class="external-link"><a href="https://zh.wikipedia.org/wiki/Markdown(https://link.jianshu.com?t=https://zh.wikipedia.org/wiki/Markdown)" target="_blank" rel="noopener">Wikipedia Markdown 条目</a><i class="fa fa-external-link"></i></span></p><hr>        <h2 id="表格">          <span class="heading-link">表格</span>        </h2>      <p>对于表格的支持，要根据具体的 Markdown 解释器来判定。在 hexo 中，支持以下 Markdown 形式的表格。<br> 需要注意以下几点：</p><ol><li>表格第一行为标题，样式会被特殊处理</li><li><code>|</code> 前后要留有空格</li><li>只要是三个 <code>-</code> 字符表示分隔线</li><li>通过 <code>:</code> 来区分，左对齐、居中、右对齐</li></ol><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 1 | 2 | 3 |</span><br><span class="line">| --- |:---:| ---:|</span><br><span class="line">| aaa | bbbbbb | c |</span><br><span class="line">| aaaaaa | b | ccc |</span><br></pre></td></tr></table></div></figure><p> 效果如下：</p><div class="table-container"><table><thead><tr><th>1</th><th align="center">2</th><th align="right">3</th></tr></thead><tbody><tr><td>aaa</td><td align="center">bbbbbb</td><td align="right">c</td></tr><tr><td>aaaaaa</td><td align="center">b</td><td align="right">ccc</td></tr></tbody></table></div><p> 代码</p>        <h3 id="行内代码">          <span class="heading-link">行内代码</span>        </h3>      <p>如果要标记一小段行内代码，可以用反引号 <strong>`</strong> 把它包起来</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一段行内代码，&#96;System.out.println(&quot;article id: &quot; + articleId);&#96; 摘自 Redis 工程。</span><br></pre></td></tr></table></div></figure><p>效果如下：</p><p>这是一段行内代码，<code>System.out.println(&quot;article id: &quot; + articleId);</code> 摘自 Redis 工程。</p>        <h3 id="区块代码">          <span class="heading-link">区块代码</span>        </h3>      <p>如果要成块的引用代码，有两种方法，一种是用制表符缩进，另一种，则是用三个反引号 <strong>```</strong>，将代码块包起来。<br> 在三个反引号后，加上语言说明，例如 <strong>```java</strong> 这样，便指定了之后的代码采用 java 的高亮。</p><p>效果如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public int genRandPost(int bound) &#123;</span><br><span class="line">    Random rand &#x3D; new Random();</span><br><span class="line">    int cnt &#x3D; rand.nextInt(bound);              </span><br><span class="line">    </span><br><span class="line">    Map&lt;String, String&gt; map &#x3D; new HashMap&lt;String, String&gt;();</span><br><span class="line">                            </span><br><span class="line">    long articleId;</span><br><span class="line">    for (int i &#x3D; 0; i &lt; cnt; i++) &#123;</span><br><span class="line">        articleId &#x3D; jedis.incr(&quot;article:&quot;);</span><br><span class="line">        map.put(&quot;author&quot;, &quot;author&quot; + i);</span><br><span class="line">        map.put(&quot;article&quot;, &quot;This is article &quot; + i);</span><br><span class="line">        jedis.hmset(&quot;article:&quot; + articleId, map);</span><br><span class="line">        map.clear();</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(&quot;Insert &quot; + cnt + &quot; posts.&quot;);</span><br><span class="line">                                            </span><br><span class="line">    return cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></div></figure><p> 公式</p><p>大神提供了 hexo 下自动部署 MathJax 插件。安装好插件后，遍可以使用 (LaTex) 来显示数学公式了。<br> 在行内输入公式，需要在公式前后加上两个反斜杠 ‘’ 以及一个括号，前后两个括号要成对。<br> 而独立成行的公式，则使用两个美元符 ‘$’。</p><p>代码：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">在行内插入公式 \\(x&#x3D;\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;\\) 是这样的。</span><br><span class="line"></span><br><span class="line">$$x&#x3D;\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;$$</span><br><span class="line"></span><br><span class="line">$$</span><br><span class="line">\begin&#123;eqnarray&#125;</span><br><span class="line">\nabla\cdot\vec&#123;E&#125; &amp;&#x3D;&amp; \frac&#123;\rho&#125;&#123;\epsilon_0&#125; \\</span><br><span class="line">\nabla\cdot\vec&#123;B&#125; &amp;&#x3D;&amp; 0 \\</span><br><span class="line">\nabla\times\vec&#123;E&#125; &amp;&#x3D;&amp; -\frac&#123;\partial B&#125;&#123;\partial t&#125; \\</span><br><span class="line">\nabla\times\vec&#123;B&#125; &amp;&#x3D;&amp; \mu_0\left(\vec&#123;J&#125;+\epsilon_0\frac&#123;\partial E&#125;&#123;\partial t&#125; \right)</span><br><span class="line">\end&#123;eqnarray&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></div></figure><p> 效果如下：</p><p>在行内插入公式 (x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}) 是这样的。</p><p>$$x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}$$</p><p>$$<br> \begin{eqnarray}<br> \nabla\cdot\vec{E} &amp;=&amp; \frac{\rho}{\epsilon_0} <br> \nabla\cdot\vec{B} &amp;=&amp; 0 <br> \nabla\times\vec{E} &amp;=&amp; -\frac{\partial B}{\partial t} <br> \nabla\times\vec{B} &amp;=&amp; \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right)<br> \end{eqnarray}<br>$$</p>        <h1 id="参考资料">          <span class="heading-link">参考资料</span>        </h1>      <p> <span class="external-link"><a href="https://www.jianshu.com/p/72cdf5c50d99" target="_blank" rel="noopener">[1][Wikipedia Markdown 条目]</a><i class="fa fa-external-link"></i></span><br> [2]<span class="external-link"><a href="http://ibruce.info/2013/11/26/markdown/" target="_blank" rel="noopener">不如的博客</a><i class="fa fa-external-link"></i></span><br> [3]<span class="external-link"><a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="noopener">Markdown 语法说明 (简体中文版)</a><i class="fa fa-external-link"></i></span><br> [4]<span class="external-link"><a href="http://www.jianshu.com/p/17fdcf17bbb4" target="_blank" rel="noopener">Markdown：让书写更美好</a><i class="fa fa-external-link"></i></span></p><p> [5]<span class="external-link"><a href="http://blog.csdn.net/xiahouzuoxin/article/details/26478179" target="_blank" rel="noopener">Markdown中插入数学公式的方法 </a><i class="fa fa-external-link"></i></span></p><p> [6]<span class="external-link"><a href="https://www.jianshu.com/p/72cdf5c50d99" target="_blank" rel="noopener">Markdown 语法简单小结</a><i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
          <category> 语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo优化加速</title>
      <link href="/2020/02/11/hexo-accelerate/"/>
      <url>/2020/02/11/hexo-accelerate/</url>
      
        <content type="html"><![CDATA[<p>不得不说，hexo博客速度真的是太慢了，还是建站前期的我全篇就几张图片都要载半天，试过不同的浏览器还是一样慢，看起来线路的问题，于是我上网查了一下发现有许多解决方法，看起来非常牛逼，但是按着一步一步下去却有很多大坑，昨天搞到晚上两三点才搞好，特此记录方式，以防未来再被坑。</p>        <h1 id="原因">          <span class="heading-link">原因</span>        </h1>      <p>博客加载慢主要有两个原因：</p><p>​    1、站内原因：内容太多了、图片太多了，导致加载需要内容多，加载慢</p><p>​    2、线路原因：托管网站的github是外网，访问外网肯定慢</p>        <h1 id="优化方法一">          <span class="heading-link">优化方法一</span>        </h1>      <p>针对第一个原因我们可以利用glup压缩，把一些静态资源高效压缩，减少请求的数据量从而达到优化博客访问速度的目的 。</p>        <h2 id="安装gulp">          <span class="heading-link">安装gulp</span>        </h2>      <p>首先安装gulp，执行以下命令：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm insatll gulp -g</span><br></pre></td></tr></table></div></figure><p>要实现gulp压缩需要安装以下五个模块：</p><blockquote><ul><li>gulp-htmlclean       // 清理html</li><li>gulp-htmlmin        // 压缩html</li><li>gulp-minify-css     // 压缩css</li><li>gulp-uglify            // 混淆js</li><li>gulp-imagemin     // 压缩图片</li></ul></blockquote><p> 安装模块： </p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify gulp-imagemin --save</span><br></pre></td></tr></table></div></figure><p> 安装的模块可以在根目录下的<code>package.json</code>文件里面看到。 </p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&quot;gulp&quot;: &quot;^3.9.1&quot;,</span><br><span class="line">&quot;gulp-htmlclean&quot;: &quot;^2.7.14&quot;,</span><br><span class="line">&quot;gulp-htmlmin&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">&quot;gulp-imagemin&quot;: &quot;^3.3.0&quot;,</span><br><span class="line">&quot;gulp-minify-css&quot;: &quot;^1.2.4&quot;,</span><br><span class="line">&quot;gulp-uglify&quot;: &quot;^3.0.0&quot;,</span><br></pre></td></tr></table></div></figure>        <h2 id="添加gulpfile-js">          <span class="heading-link">添加gulpfile.js</span>        </h2>      <p>进入博客根目录，新建<code>gulpfile.js</code>文件，内容如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">var gulp &#x3D; require(&#39;gulp&#39;);</span><br><span class="line">var minifycss &#x3D; require(&#39;gulp-minify-css&#39;);</span><br><span class="line">var uglify &#x3D; require(&#39;gulp-uglify&#39;);</span><br><span class="line">var htmlmin &#x3D; require(&#39;gulp-htmlmin&#39;);</span><br><span class="line">var htmlclean &#x3D; require(&#39;gulp-htmlclean&#39;);</span><br><span class="line">var imagemin &#x3D; require(&#39;gulp-imagemin&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 压缩html</span><br><span class="line">gulp.task(&#39;minify-html&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.html&#39;)</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: true,</span><br><span class="line">            minifyJS: true,</span><br><span class="line">            minifyCSS: true,</span><br><span class="line">            minifyURLs: true,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#39;))</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 压缩css</span><br><span class="line">gulp.task(&#39;minify-css&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;**&#x2F;*.css&#39;)</span><br><span class="line">        .pipe(minifycss(&#123;</span><br><span class="line">            compatibility: &#39;ie8&#39;</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 压缩js</span><br><span class="line">gulp.task(&#39;minify-js&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;js&#x2F;**&#x2F;*.js&#39;)</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#39;));</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 压缩图片</span><br><span class="line">gulp.task(&#39;minify-images&#39;, function() &#123;</span><br><span class="line">    return gulp.src(&#39;.&#x2F;public&#x2F;images&#x2F;**&#x2F;*.*&#39;)</span><br><span class="line">        .pipe(imagemin(</span><br><span class="line">        [imagemin.gifsicle(&#123;&#39;optimizationLevel&#39;: 3&#125;), </span><br><span class="line">        imagemin.jpegtran(&#123;&#39;progressive&#39;: true&#125;), </span><br><span class="line">        imagemin.optipng(&#123;&#39;optimizationLevel&#39;: 7&#125;), </span><br><span class="line">        imagemin.svgo()],</span><br><span class="line">        &#123;&#39;verbose&#39;: true&#125;))</span><br><span class="line">        .pipe(gulp.dest(&#39;.&#x2F;public&#x2F;images&#39;))</span><br><span class="line">&#125;);</span><br><span class="line">&#x2F;&#x2F; 默认任务</span><br><span class="line">gulp.task(&#39;default&#39;, [</span><br><span class="line">    &#39;minify-html&#39;,&#39;minify-css&#39;,&#39;minify-js&#39;,&#39;minify-images&#39;</span><br><span class="line">]);</span><br></pre></td></tr></table></div></figure>        <h2 id="开始压缩">          <span class="heading-link">开始压缩</span>        </h2>      <figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">gulp  &#x2F;&#x2F; 执行压缩，两条命令可以合并：hexo g &amp;&amp; gulp</span><br></pre></td></tr></table></div></figure><p>然后就可以执行部署命令：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></div></figure>        <h2 id="参考文章">          <span class="heading-link">参考文章</span>        </h2>      <p>以上内容为以下文章中总结</p><blockquote><ul><li><span class="external-link"><a href="https://link.jianshu.com?t=http://sanyecao.me/hexo-minify.html" target="_blank" rel="noopener">Hexo优化方案 gulp插件静态资源压缩</a><i class="fa fa-external-link"></i></span></li><li><span class="external-link"><a href="https://link.jianshu.com?t=https://www.karlzhou.com/articles/compress-minify-hexo/" target="_blank" rel="noopener">优化Hexo博客 - 压缩 HTML、CSS、JS、IMG 等</a><i class="fa fa-external-link"></i></span></li><li><span class="external-link"><a href="https://link.jianshu.com?t=https://www.liuxinggang.com/2016-12-06-hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%EF%BC%8D%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/" target="_blank" rel="noopener">hexo博客进阶－性能优化</a><i class="fa fa-external-link"></i></span></li><li><span class="external-link"><a href="https://www.jianshu.com/p/93b63852f0b3" target="_blank" rel="noopener">Hexo博客之速度优化</a><i class="fa fa-external-link"></i></span></li></ul></blockquote><p>这样大概就成功了，这方法按照以上教程一步步跟踪不会有问题，但是速度提升的也不是特别明显。</p>        <h1 id="优化方法二">          <span class="heading-link">优化方法二</span>        </h1>      <p>针对第二个原因，我们可以采取coding部署，<span class="external-link"><a href="https://link.jianshu.com?t=https://coding.net/" target="_blank" rel="noopener">Coding</a><i class="fa fa-external-link"></i></span>算是国内的Github，同样提供代码托管、项目管理和Pages服务等，因此我们可以像把网站部署在Github上一样，部署在Coding 上，通过配置<code>_config.yml</code>文件实现Github和Coding上的文件同时更新，然后通过域名分流解析，来达到网站加速的目的。</p><p>（坑非常多）</p>        <h2 id="流程">          <span class="heading-link">流程</span>        </h2>              <h3 id="注册账号">          <span class="heading-link">注册账号</span>        </h3>      <p>​    官网<span class="external-link"><a href="https://link.jianshu.com?t=https://coding.net/" target="_blank" rel="noopener">Coding</a><i class="fa fa-external-link"></i></span> </p><p>###创建项目</p><p><img src="/2020/02/11/hexo-accelerate/a.png" alt="是"></p><p>项目名为你的coding账号名，例如我的账号名是tuonan，所以我新建的项目为tuonan，注意要在初始化项目那一项打勾 </p><p><img src="/2020/02/11/hexo-accelerate/b.png" alt></p>        <h3 id="部署公钥">          <span class="heading-link">部署公钥</span>        </h3>      <p>点击右上角的个人账号 —&gt; 个人设置 —&gt; SSH公钥 —&gt; 新增公钥。</p><p>Mac默认的公钥路径为<code>/Users/用户名/.ssh</code>，公钥文件为<code>id_rsa.pub</code>，复制内容添加进去就可以了。添加完成后以后上传代码的时候，就不再需要输入账号密码了。</p><p><img src="/2020/02/11/hexo-accelerate/c.png" alt="1581392290125"></p><p> <img src="/2020/02/11/hexo-accelerate/d.png" alt="d"></p><blockquote><p>测试 SSH 公钥是否添加成功：本地打开 Git Bash 窗口，输入一下命令：</p><p><code>ssh -T git@coding.net</code></p></blockquote><p>若出现这种情况</p><blockquote><p><code>ssh: connect to host coding.net port 22: Connection refused</code></p><p><img src="/2020/02/11/hexo-accelerate/e.png" alt="e"></p></blockquote><p>说明防火墙完全屏蔽了端口 22 ，这时候不要慌张，直接输入如下命令使用 Coding 提供的 443 端口 SSH 服务即可解决：</p><blockquote><p><code>ssh -T -p 443 git@git-ssh.coding.net</code></p></blockquote><p>接着会显示是否继续，选择 yes 继续，如果提示下列内容成功，即 SSH 公钥配置成功： </p><p><img src="/2020/02/11/hexo-accelerate/f.png" alt="f"></p>        <h3 id="配置博客主文件">          <span class="heading-link">配置博客主文件</span>        </h3>      <p>打开 Hexo 博客主配置文件 <code>_config.yml</code>，找到 <code>deploy</code> 属性，作如下配置：</p><p>deploy:</p><p>​    type: git<br>    repository:<br>      github: #与原来一致<br>      coding:  #按自己的来，格式是这样<br>    branch: master</p><p>按照下图在这里可以查到coding要填的东西，是红色区域内容</p><p><img src="/2020/02/11/hexo-accelerate/g.png" alt></p>        <h3 id="修改域名解析">          <span class="heading-link">修改域名解析</span>        </h3>      <p>增加CNAME记录 ，修改之前将Github线路类型修改为国外，记录值不变。新建绑定到Coding的解析，线路类型为默认，记录值为<code>pages.coding.me</code> (这里就是坑之一，下面会解释，先别填)</p><p><img src="/2020/02/11/hexo-accelerate/l.png" alt="l"></p>        <h3 id="Coding构建静态页面">          <span class="heading-link">Coding构建静态页面</span>        </h3>      <p><img src="/2020/02/11/hexo-accelerate/i.png" alt="i"></p><p>点设置，这里一个天坑出现了</p><p><img src="/2020/02/11/hexo-accelerate/j.png" alt="j"></p><p>这里原本绑定的时候证书状态要申请才能正常啊，然后我一直申请一直申请，都是申请失败，申请了一个多小时，我发现事情并不对劲啊，然后我一百度出带问题了。</p>        <h4 id="第一个坑：coding记录值的问题">          <span class="heading-link">第一个坑：coding记录值的问题</span>        </h4>      <p>这里我卡了几个小时，在百度上几乎查了所有相关博客，都是要求记录值为<code>pages.coding.me</code> 或者是<code>（username).coding.me</code> ,真的是气到吐血！可能是以前版本的原因要求这么写。不断申请到想吐了，证书状态还是申请失败，最后实在没办法一直试，尝试了一下上面那张图的紫色笔遮挡部分，竟然就是要填这个。</p>        <h4 id="第二个坑：线路类型导致的问题">          <span class="heading-link">第二个坑：线路类型导致的问题</span>        </h4>      <p>申请证书时，coding在境内，github在境外，所以过程中要先把github的记录暂停，等证书申请成功了再继续打开。</p><p>以上坑排除后，再申请证书，不出意外的话证书状态应该是正常了。</p>        <h3 id="立即部署">          <span class="heading-link">立即部署</span>        </h3>      <p><img src="/2020/02/11/hexo-accelerate/i.png" alt="i"></p><p>点击立即部署，下面提升成功✔图标就差不多了，剩下的就是重启一下hexo就好了</p><p>hexo clean、hexo g、hexo d</p>        <h1 id="结果及个人感悟">          <span class="heading-link">结果及个人感悟</span>        </h1>      <p>第二种方法速度真的改变很大，快了很多，虽然一番波折，但是结果很好值得，感觉有一点点成就感。</p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo博客 </tag>
            
            <tag> 优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站技术上的问题</title>
      <link href="/2020/02/10/askfor-this-blog/"/>
      <url>/2020/02/10/askfor-this-blog/</url>
      
        <content type="html"><![CDATA[        <h1 id="问题一">          <span class="heading-link">问题一</span>        </h1>      <p>在把hexo连到coding之后，执行hexo deploy指令时，必须再输密码，试过好多网上方法不管用，求解</p>        <h1 id="问题二（已解决）">          <span class="heading-link">问题二（已解决）</span>        </h1>      <p>在把hexo连到coding之后，评论会出现以下情况：</p><p><img src="/2020/02/10/askfor-this-blog/a.png" alt></p><p>也是得不到解决</p><p>解决方法：我是白痴 </p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
          <category> 说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说明 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Front-matter的用法</title>
      <link href="/2020/02/09/about-Front-matter/"/>
      <url>/2020/02/09/about-Front-matter/</url>
      
        <content type="html"><![CDATA[        <h2 id="介绍">          <span class="heading-link">介绍</span>        </h2>      <p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于Front-matter的用法</span><br><span class="line">date: 2020-02-09 10:18:57</span><br><span class="line">categories: 建站</span><br><span class="line">tags: Front-matter</span><br><span class="line">---</span><br></pre></td></tr></table></div></figure>        <h2 id="预设">          <span class="heading-link">预设</span>        </h2>      <p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>layout</code></td><td>布局</td><td></td></tr><tr><td><code>title</code></td><td>标题</td><td>文章的文件名</td></tr><tr><td><code>date</code></td><td>建立日期</td><td>文件建立日期</td></tr><tr><td><code>updated</code></td><td>更新日期</td><td>文件更新日期</td></tr><tr><td><code>comments</code></td><td>开启文章的评论功能</td><td>true</td></tr><tr><td><code>tags</code></td><td>标签（不适用于分页）</td><td></td></tr><tr><td><code>categories</code></td><td>分类（不适用于分页）</td><td></td></tr><tr><td><code>permalink</code></td><td>覆盖文章网址</td><td></td></tr><tr><td><code>keywords</code></td><td>仅用于 meta 标签和 Open Graph 的关键词（不推荐使用）</td><td></td></tr><tr><td><code>excerpt</code></td><td>指定文章摘要</td><td></td></tr></tbody></table></div><p>下面几种 Front-Matter 属性在 Hexo 文档中并没有出现，但在 Hexo 提供的主题单元测试库中出现。这些属性如下： </p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>link</code></td><td>链接(当点击该文章标题时, 打开所指定的链接地址 )</td><td></td></tr><tr><td><code>photos</code></td><td>图片 ( 指定一些图片,Stun 主题将其显示在文章最顶部)</td><td></td></tr><tr><td><code>top_image</code></td><td>用于设置某篇文章顶部的大图</td><td></td></tr><tr><td><code>toc</code></td><td>文章是否启用目录。会覆盖主题配置文件中的全局设置</td><td></td></tr><tr><td><code>quicklink</code></td><td>是否在浏览器空闲时间预取可视区内的链接，以加快后续页面的加载速度</td><td></td></tr><tr><td><code>math</code></td><td>是否需要解析数学公式</td><td></td></tr><tr><td><code>reward</code></td><td>文章是否启用打赏功能</td><td></td></tr><tr><td><code>copyright</code></td><td>文章是否启用版权信息</td><td></td></tr></tbody></table></div><p>下面是安装某些插件后，可以设置的几种 Front-Matter 属性 </p><div class="table-container"><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td><code>top</code></td><td>文章是否置顶</td><td></td></tr><tr><td><code>no-emoji</code></td><td>是否解析文章中的 emoji 代码</td><td></td></tr></tbody></table></div>        <h2 id="具体参数">          <span class="heading-link">具体参数</span>        </h2>              <h3 id="分类-和-标签">          <span class="heading-link">分类 和 标签</span>        </h3>      <p>​    分类和标签在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code></p>        <h4 id="注：分类方法的分歧">          <span class="heading-link">注：分类方法的分歧</span>        </h4>      <p>​    WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">  - Diary</span><br><span class="line">  - Life</span><br></pre></td></tr></table></div></figure><p>会使分类<code>Life</code>成为<code>Diary</code>的子分类，而不是并列分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categories:</span><br><span class="line">- [Diary, PlayStation]</span><br><span class="line">- [Diary, Games]</span><br><span class="line">- [Life]</span><br></pre></td></tr></table></div></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p><p>标签没有顺序性和层次性，<strong>只能设置为同级的</strong>。也就是说，标签只有一种用法：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">tags:</span><br><span class="line">  - PlayStation</span><br><span class="line">  - Games</span><br><span class="line">  - [Diary, Life]</span><br><span class="line">---</span><br></pre></td></tr></table></div></figure><p>这样会被解析为 <code>PlayStation</code>、<code>Games</code>、<code>Diary,Life</code> 三个并列标签。</p><p>(已尝试:直接tags：A 、B就行)</p>        <h3 id="其他">          <span class="heading-link">其他</span>        </h3>      <p>​    有用到的话，详见<span class="external-link"><a href="https://liuyib.github.io/hexo-theme-stun/zh-CN/advanced/advanced-setting.html#front-matter" target="_blank" rel="noopener">主题指南</a><i class="fa fa-external-link"></i></span></p>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Front-matter </tag>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一次测试</title>
      <link href="/2020/02/06/who-know/"/>
      <url>/2020/02/06/who-know/</url>
      
        <content type="html"><![CDATA[        <h1 id="大家好">          <span class="heading-link">大家好</span>        </h1>              <h2 id="我是拖男">          <span class="heading-link">我是拖男</span>        </h2>              <h3 id="今天舒服了">          <span class="heading-link">今天舒服了</span>        </h3>      <p>冲！！</p><p><img src="/2020/02/06/who-know/asd.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站</title>
      <link href="/2020/02/05/about-this/"/>
      <url>/2020/02/05/about-this/</url>
      
        <content type="html"><![CDATA[        <h1 id="本站建立初衷">          <span class="heading-link">本站建立初衷</span>        </h1>      <p>记录自己的成长经历和学习经验，同时分享给来参观的有缘人</p><p><img src="/2020/02/05/about-this/www.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 说明 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说明 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
